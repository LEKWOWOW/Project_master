class Compny:
    def __init__(self,ticket_list,schedule_list,customer_list):
        self.__ticket_list = ticket_list
        self.__schedule_list = schedule_list

class Booking:
    booking_id = 1
    def __init__(self,date,status,bus,schedule):
        self.__booking_id = Booking.booking_id
        self.__date = date
        self.__status = status
        self.__bus = bus
        self.__schedule = schedule
        self.__tickets = []     #KONG
        Booking.booking_id +=1
    @property
    def bus(self):
        return self.__bus
    @property
    def booking_id(self): # KONG
        return self.__booking_id
    @property
    def tickets(self): # KONG
        return self.__tickets
    def booking_seat(self,seat_book):
        if  self.__bus.check_available_seat() >= seat_book:
            self.__bus.reuce_seat(seat_book)
            self.__status ="‚úîÔ∏è ‡∏à‡∏≠‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à"
        else:
            print("‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÅ‡∏•‡πâ‡∏ß‡∏à‡πâ‡∏≤")
    def add_ticket(self, ticket): # KONG
        if ticket not in self.__tickets:
            self.__tickets.append(ticket)
            print(f"‚úîÔ∏è ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏±‡πã‡∏ß‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢")
        else: print(f"‚ùå ‡∏ï‡∏±‡πã‡∏ß‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç {ticket.ticket_id} ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πâ‡πÉ‡∏ô‡πÄ‡∏•‡∏Ç‡∏™‡∏°‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á {self.__booking_id} ‡πÅ‡∏•‡πâ‡∏ß")
    def check_in(self, ticket_id): # KONG
        if self.__status:
            for ticket in self.__tickets:
                if ticket.ticket_id == ticket_id:
                    if ticket.ticket_status == "‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢":
                        ticket.ticket_status = "‡πÄ‡∏ä‡πá‡∏Ñ‡∏≠‡∏¥‡∏ô‡πÅ‡∏•‡πâ‡∏ß"
                        print(f"‚úîÔ∏è ‡∏ï‡∏±‡πã‡∏ß {ticket.ticket_id} {ticket.ticket_status}")
                        return
                    else:
                        print(f"‚ùå ‡∏ï‡∏±‡πã‡∏ß {ticket.ticket_id} ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô")
                        return
            print(f"‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ï‡∏±‡πã‡∏ß {ticket_id} ‡πÉ‡∏ô‡πÄ‡∏•‡∏Ç‡∏™‡∏°‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á {self.__booking_id}")
        else: print(f"‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ï‡∏±‡πã‡∏ß‡πÉ‡∏ô‡∏™‡∏°‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç {self.__booking_id}")
    def book_detail(self): # KONG
        info = f"‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç: {self.__booking_id}, ‡πÄ‡∏ß‡∏•‡∏≤: {self.__date}, ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: {self.__status}, Bus: {self.__bus}, ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÄ‡∏ß‡∏•‡∏≤: {self.__schedule}"
        if self.__tickets:
            detail_str = ", ".join([ticket.ticket_id for ticket in enumerate(self.__tickets, 1)])
            info += f"‡∏ï‡∏±‡πã‡∏ß: {detail_str}"
        else: info += "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ï‡∏±‡πã‡∏ß‡πÉ‡∏ô‡∏™‡∏°‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏ô‡∏µ‡πâ"
        return info
    def view_tickets(self): # KONG
        if self.__tickets:
            for number, ticket in enumerate(self.__tickets, 1):
                print(f"{number}. {ticket.ticket_detail()}")
        else: print(f"‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ï‡∏±‡πã‡∏ß‡πÉ‡∏ô‡∏™‡∏°‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç {self.__booking_id}") 
    def cancel_booking(self): #KONG ‡∏ñ‡πâ‡∏≤‡∏à‡∏∞‡∏ó‡∏≥‡πÄ‡∏£‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ owner
        # if owner = owner 
        # status = "cancel" 
        pass
    
class Station:
    def __init__(self,station_id,station_name,capacity):
        self.__station_id = station_id
        self.__station_name = station_name
    @property
    def station_id(self):
        return self.__station_id
    @property
    def station_name(self):
        return self.__station_name
    
class Seat:
    def __init__(self,seat_id):
        self.__seat_id
    
class Bus:
    def __init__(self,license_plate,bus_name,capacity):
        self.__license_plate = license_plate
        self.__bus_name = bus_name
        self.__capacity = capacity
        self.__available_seat = capacity
    @property
    def license_plat(self):
        return self.__bus_id
    def check_available_seat(self):
        return self.__available_seat 
    def reuce_seat(self,number_seat):
        if number_seat <= self.__available_seat:
             self.__available_seat -= number_seat
        else:
            print("‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ó‡∏µ‡πà‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏•‡∏∞‡∏à‡∏∞ ")
    def __str__(self):
        return f"Bus üöå {self.__license_plate} üí∫ ‡∏ó‡∏µ‡πà‡∏ô‡∏±‡πà‡∏á‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠: {self.__available_seat}/{self.__capacity}"
    
class Schedule:
    def __init__(self,schedule_id):
        self.__schedule_id = schedule_id
        self.__station_number = Station.station_id
        self.__station_name = Station.station_name
    @property
    def schedule_id(self):
        return self.__schedule_id
    @property
    def station_name(self):
        return self.__station_name
    @property
    def station_number(self):
        return self.__station_number
    
############################################### KONG

class Ticket:
    def __init__(self, ticket_id, ticket_price, ticket_status):
        self.__ticket_id = ticket_id
        self.__ticket_price = ticket_price
        self.__ticket_status = ticket_status
    @property
    def ticket_id(self):
        return self.__ticket_id
    @property
    def ticket_status(self):
        return self.__ticket_status
    @property
    def ticket_price(self):
        return self.__ticket_price
    def ticket_detail(self):
        return f"‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç: {self.__ticket_id}, ‡∏£‡∏≤‡∏Ñ‡∏≤: {self.__ticket_price}, ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: {self.__ticket_status}"
    
class User:
    def __init__(self, user_id, user_name, user_email, user_phone):
        self.__user_id = user_id
        self.__user_name = user_name
        self.__user_email = user_email
        self.__user_phone = user_phone
        self.__books = []
        self.__payments = []
    def add_booking(self, book):
        if book not in self.__books:
            self.__books.append(book)
            print(f"‚úîÔ∏è ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏°‡∏∏‡∏î‡∏à‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß")
        else: print(f"‚ùå ‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ‡∏™‡∏°‡∏∏‡∏î‡∏à‡∏≠‡∏á‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç {book.booking_id} ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß")
    def add_payment(self, payment):
        self.__payments.append(payment)
    def view_books(self):
        if self.__books:
            for number, book in enumerate(self.__books, 1):
                print(f"{number}. {book.book_detail()}")
        else: print(f"‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏°‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÉ‡∏ô‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ô‡∏µ‡πâ")
    def view_payments(self):
        if self.__payments:
            for number, payment in enumerate(self.__payments, 1):
                print(f"{number}. {payment.payment_detail()}")
        else: print(f"‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡πà‡∏≤‡∏¢‡πÉ‡∏ô‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ô‡∏µ‡πâ")
    def payment_by_ticket_id(self, ticket_id):
        if self.__books:
            for book in self.__books:
                for ticket in book.tickets.ticket_id:
                    if ticket.ticket_id == ticket_id:
                        if ticket.ticket_status == "‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô":
                            ticket.process_payment(ticket.ticket_price)
                            return
                        else:
                            print(f"‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏î‡πâ")
            print(f"‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ï‡∏±‡πã‡∏ß")
        else: print(f"‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏°‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÉ‡∏ô‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ô‡∏µ‡πâ")
    def refund_by_ticket_id(self, ticket_id):
        if self.__books:
            for book in self.__books:
                for ticket in book.tickets.ticket_id:
                    if ticket.ticket_id == ticket_id:
                        if ticket.ticket_status == "‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢":
                            ticket.process_refund(ticket.ticket_price)
                            return
                        else:
                            print(f"‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Ñ‡∏∑‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏î‡πâ")
            print(f"‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ï‡∏±‡πã‡∏ß")
        else: print(f"‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏°‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÉ‡∏ô‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ô‡∏µ‡πâ")

class Customer(User):
    def __init__(self, user_id, user_name, user_email, user_phone):
        super().__init__(user_id, user_name, user_email, user_phone)
    def add_booking(self, book):
        return super().add_booking(book)
    def add_payment(self, payment):
        return super().add_payment(payment)
    def view_books(self):
        return super().view_books()
    def view_payments(self):
        return super().view_payments()
    
class Payment:
    def __init__(self, payment_id, payment_date, payment_method, ticket = Ticket):
        self.__payment_id = payment_id
        self.__payment_date = payment_date
        self.__payment_method = payment_method
        self.__ticket = ticket
    def payment_detail(self):
        return f"‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç: {self.__payment_id}, ‡πÄ‡∏ß‡∏•‡∏≤: {self.__payment_date}, Method: {self.__payment_method}, ‡∏ï‡∏±‡πã‡∏ß: {self.__ticket.ticket_id}, ‡∏£‡∏≤‡∏Ñ‡∏≤: {self.__ticket.ticket_price}, ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: {self.__ticket.ticket_status}"
    def process_payment(self, price):
        self.__ticket.ticket_status = "‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢"
        print(f"‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏õ‡πá‡∏ô‡∏à‡∏≥‡∏ô‡∏ß‡∏ô {price}")
    def process_refund(self, price):
        self.__ticket.ticket_status = "‡∏Ñ‡∏∑‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢"
        print(f"‡∏Ñ‡∏∑‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏õ‡πá‡∏ô‡∏à‡∏≥‡∏ô‡∏ß‡∏ô {price}")
    
def create_instance():
    bus_list = []
    bus1 = Bus("‡∏Å‡∏û 289 ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û","‡∏£‡∏ñ‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤",20)
    bus2 = Bus("‡∏Å‡∏û 309 ‡πÄ‡∏û‡∏ä‡∏£‡∏ö‡∏∏‡∏£‡∏µ","‡∏£‡∏ñ‡∏õ‡∏£‡∏±‡∏ö‡∏≠‡∏≤‡∏Å‡∏≤‡∏®",20)
    bus3 = Bus("‡∏Å‡∏ä 208 ‡∏•‡∏≥‡∏õ‡∏≤‡∏á","‡∏£‡∏ñ‡πÄ‡∏≠‡∏Å‡∏ä‡∏ô‡∏£‡πà‡∏ß‡∏°‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡∏≠‡∏≤‡∏Å‡∏≤‡∏®",25)
    bus_list.append(bus1)
    bus_list.append(bus2)
    bus_list.append(bus3)
    # print(bus_list)
    ######################################### KONG
    man1 = Customer("001", "bob", "kongza@gmail", "08-2256-1122")
    ticket1 = Ticket("112", 531, "‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô") # price ‡∏≠‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡πÄ‡∏£‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏õ‡∏î‡∏∂‡∏á‡∏°‡∏≤‡∏ä‡∏∞ ‡∏î‡∏∂‡∏á‡∏à‡∏≤‡∏Å sation ‡πÑ‡∏õ‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ß‡πâ‡πÉ‡∏ôticket ‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡∏Ñ‡∏≥‡∏ô‡∏ß‡πä‡∏à‡∏≤‡∏Å station‡∏î‡∏µ‡πÑ‡∏´‡∏°‡πÄ‡∏á‡∏¥‡∏ô‡∏≠‡∏∞
    #man1_book = Booking("03-08-2546", "‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô", bus1, None) #class Booking ‡πÉ‡∏ä‡πâ‡πÑ‡∏á‡∏á‡∏á
    print(ticket1.ticket_detail())
    # man1.add_booking(man1_book)
    # man1.view_books()
    # man1_book.add_ticket(ticket1)
    # man1.view_books()
    payment1 = Payment("852", "01-02-2003", "cash", ticket1)
    man1.add_payment(payment1)
    man1.view_payments()
    # man1.payment_by_ticket_id("112")
    # man1.refund_by_ticket_id("112")
    # man1.view_payments()
create_instance()